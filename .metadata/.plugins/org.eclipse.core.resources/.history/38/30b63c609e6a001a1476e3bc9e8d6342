package rozdzial.pietnasty.pierwszy;

import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;

public class FileAndDirectoryInfo {

	public static void getFileAndDirectoryInfo() throws IOException {
		
		Scanner scaner = new Scanner( System.in );
		
		System.out.println("Podaj nazwê pliku lub folderu:");
		
		// Utwórz obiekt Path na podstawie informacji od u¿ytkownika
		Path path = Paths.get( scaner.nextLine() );
		
		if ( Files.exists(path)) { // Jeœli œcie¿ka istnieje, wyœwietla informacje o niej
			
			//Sprawdza czy jak nazywa siê ostatni element œcie¿ki
			System.out.printf("%n%s istnieje%n", path.getFileName());
			// Sprawdza czy ostatni element œcie¿ki jest folderem 
			System.out.printf("%s folderem%n", 
					Files.isDirectory(path) ? "Jest" : "Nie jest");
			System.out.printf("%s œcie¿k¹ bezwzglêdn¹%n",
					path.isAbsolute() ? "Jest" : "Nie jest");
			System.out.printf("Ostatnia modyfikacja: %s%n",
					Files.getLastModifiedTime(path));
			System.out.printf("Rozmiar pliku: %s%n", Files.size(path) );
			System.out.printf("Œcie¿ka: %s%n", path );
			System.out.printf("Œcie¿ka bezwzglêdna: %s%n", path.toAbsolutePath());
			
			// ten blok wyœwietla zawartoœæ folderu
			if ( Files.isDirectory(path) ) {
				
				System.out.printf("%nZawartoœæ folderu:%n");
				
				
				DirectoryStream<Path> directoryStream = Files.newDirectoryStream(path);
				
				for ( Path p : directoryStream ) {
					System.out.println(p);
				}
				
			}else {
				System.out.printf("%n%t%s jest plikiem a nie katalogiem", path.getFileName());
			}
			
			
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
