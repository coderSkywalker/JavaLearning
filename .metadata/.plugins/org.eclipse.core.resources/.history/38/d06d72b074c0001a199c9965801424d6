package com.marek.rozdzial.concurrent;

import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Boot {
	
	public static void main( String[] args ) {
		PrintTask task = new PrintTask( "alibaaba" );
		task.run();
		
		PrintTask taskDrugi = new PrintTask( "dartagnian" );
		PrintTask taskTrzeci = new PrintTask( "atos" );
		PrintTask taskCzwarty = new PrintTask( "portos" );
		PrintTask taskPi¹ty = new PrintTask( "aramis" );
		PrintTask taskSzósty = new PrintTask( "richelieu" );
		
		System.out.println( "Uruchamianie wykonawcy zadañ" );
		
		//Utworzenie ExecutorService do zarz¹dzania zadaniami
		ExecutorService executorService = Executors.newCachedThreadPool();
		
		//wykonaj trzy zadania PrintTask
		executorService.execute( taskDrugi );
		executorService.execute( taskTrzeci );
		executorService.execute( taskCzwarty );
		executorService.execute( taskPi¹ty );
		executorService.execute( taskSzósty );
		
		// wy³¹cz ExecutorService - on sam zdecyduje, kiedy wy³¹czyæ w¹tki
		executorService.shutdown();
		
		try {
			Thread.sleep( 2000 );
		} catch ( InterruptedException e ) {
			e.printStackTrace();
		}
		
		
		System.out.printf( "Zadania uruchomione, koniec main%n%n" );
		System.out.println( "a teraz niespodzianka P.S. haha to jest dopiero koniec");
		
		
		
	}
	
	
	
}
